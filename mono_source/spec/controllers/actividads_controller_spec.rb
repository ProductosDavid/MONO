=begin
    MONO
    Copyright (C) 2015  Universidad de los Andes
  
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
  
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
  
    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
=end
require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It     demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

describe ActividadsController do
  login_user

  describe "POST create" do
    context "with valid attributes" do
      it "creates a new actividad tarea_simple" do
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.build(:actividad, plantilla_id: plantilla.id)
        expect{
          post :create, {actividad: FactoryGirl.attributes_for(:actividad, plantilla_id: plantilla.id), :nodo_padre => myjstree1.id, :nodo_titulo => actividad.nombre, :nodo_tipo => "tarea_simple", :posicion => "0"}
        }.to change(Actividad,:count).by(1)
      end

      it "redirects to the new actividad tarea_simple" do
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.build(:actividad, plantilla_id: plantilla.id)
        post :create, {actividad: FactoryGirl.attributes_for(:actividad, plantilla_id: plantilla.id), :nodo_padre => myjstree1.id, :nodo_titulo => actividad.nombre, :nodo_tipo => "tarea_simple", :posicion => "0"}
        response.should render_template(:text => "true")
      end
    end

    context "with valid attributes" do
      it "creates a new actividad tarea_multi_seq" do
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.build(:actividad, plantilla_id: plantilla.id, modoejecucion: "2")
        expect{
          post :create, {actividad: FactoryGirl.attributes_for(:actividad, plantilla_id: plantilla.id, modoejecucion: actividad.modoejecucion), :nodo_padre => myjstree1.id, :nodo_titulo => actividad.nombre, :nodo_tipo => "tarea_multi_seq", :posicion => "0"}
        }.to change(Actividad,:count).by(1)
      end

      it "redirects to the new actividad tarea_multi_seq" do
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.build(:actividad, plantilla_id: plantilla.id, modoejecucion: "2")
        post :create, {actividad: FactoryGirl.attributes_for(:actividad, plantilla_id: plantilla.id, modoejecucion: actividad.modoejecucion), :nodo_padre => myjstree1.id, :nodo_titulo => actividad.nombre, :nodo_tipo => "tarea_multi_seq", :posicion => "0"}
        response.should render_template(:text => "true")
      end
    end

    context "with valid attributes" do
      it "creates a new actividad tarea_multi_para" do
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.build(:actividad, plantilla_id: plantilla.id, modoejecucion: "3")
        expect{
          post :create, {actividad: FactoryGirl.attributes_for(:actividad, plantilla_id: plantilla.id, modoejecucion: actividad.modoejecucion), :nodo_padre => myjstree1.id, :nodo_titulo => actividad.nombre, :nodo_tipo => "tarea_multi_para", :posicion => "0"}
        }.to change(Actividad,:count).by(1)
      end

      it "redirects to the new actividad tarea_multi_para" do
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.build(:actividad, plantilla_id: plantilla.id, modoejecucion: "3")
        post :create, {actividad: FactoryGirl.attributes_for(:actividad, plantilla_id: plantilla.id, modoejecucion: actividad.modoejecucion), :nodo_padre => myjstree1.id, :nodo_titulo => actividad.nombre, :nodo_tipo => "tarea_multi_para", :posicion => "0"}
        response.should render_template(:text => "true")
      end
    end

    context "with valid attributes" do
      it "renames a actividad tarea_simple" do
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.build(:actividad, plantilla_id: plantilla.id)
        actividadUpdate = FactoryGirl.build(:actividad, plantilla_id: plantilla.id)
        post :create, {actividad: FactoryGirl.attributes_for(:actividad, plantilla_id: plantilla.id), :nodo_padre => myjstree1.id, :nodo_titulo => actividad.nombre, :nodo_tipo => "tarea_simple", :posicion => "0"}
        actividadBD = Actividad.last
        myjstreeBD = MyJsTree.last()
        post :updateName, {:nombre => actividadUpdate.nombre, :nodo_id => myjstreeBD.id, :id => actividadBD.id}
        actividadBDUpd = Actividad.find_by_id(actividadBD.id)
        myjstreeBDUpd = MyJsTree.find_by_id(myjstreeBD.id)
        actividadBDUpd.nombre.should eq(actividadUpdate.nombre)
        myjstreeBDUpd.title.should eq(actividadUpdate.nombre)
      end

      it "redirects to the rename actividad tarea_simple" do
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.build(:actividad, plantilla_id: plantilla.id)
        actividadUpdate = FactoryGirl.build(:actividad, plantilla_id: plantilla.id)
        post :create, {actividad: FactoryGirl.attributes_for(:actividad, plantilla_id: plantilla.id), :nodo_padre => myjstree1.id, :nodo_titulo => actividad.nombre, :nodo_tipo => "tarea_simple", :posicion => "0"}
        actividadBD = Actividad.last
        myjstreeBD = MyJsTree.last()
        post :updateName, {:nombre => actividadUpdate.nombre, :nodo_id => myjstreeBD.id, :id => actividadBD.id}
        response.should render_template(:text => "true")
      end
    end

    context "with valid attributes" do
      it "renames a actividad tarea_multi_seq" do
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.build(:actividad, plantilla_id: plantilla.id, modoejecucion: "2")
        actividadUpdate = FactoryGirl.build(:actividad, plantilla_id: plantilla.id)
        post :create, {actividad: FactoryGirl.attributes_for(:actividad, plantilla_id: plantilla.id, modoejecucion: actividad.modoejecucion), :nodo_padre => myjstree1.id, :nodo_titulo => actividad.nombre, :nodo_tipo => "tarea_multi_seq", :posicion => "0"}
        actividadBD = Actividad.last
        myjstreeBD = MyJsTree.last()
        post :updateName, {:nombre => actividadUpdate.nombre, :nodo_id => myjstreeBD.id, :id => actividadBD.id}
        actividadBDUpd = Actividad.find_by_id(actividadBD.id)
        myjstreeBDUpd = MyJsTree.find_by_id(myjstreeBD.id)
        actividadBDUpd.nombre.should eq(actividadUpdate.nombre)
        myjstreeBDUpd.title.should eq(actividadUpdate.nombre)
      end

      it "redirects to the rename actividad tarea_multi_seq" do
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.build(:actividad, plantilla_id: plantilla.id, modoejecucion: "2")
        actividadUpdate = FactoryGirl.build(:actividad, plantilla_id: plantilla.id)
        post :create, {actividad: FactoryGirl.attributes_for(:actividad, plantilla_id: plantilla.id, modoejecucion: actividad.modoejecucion), :nodo_padre => myjstree1.id, :nodo_titulo => actividad.nombre, :nodo_tipo => "tarea_multi_seq", :posicion => "0"}
        actividadBD = Actividad.last
        myjstreeBD = MyJsTree.last()
        post :updateName, {:nombre => actividadUpdate.nombre, :nodo_id => myjstreeBD.id, :id => actividadBD.id}
        response.should render_template(:text => "true")
      end
    end

    context "with valid attributes" do
      it "renames a actividad tarea_multi_para" do
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.build(:actividad, plantilla_id: plantilla.id, modoejecucion: "3")
        actividadUpdate = FactoryGirl.build(:actividad, plantilla_id: plantilla.id)
        post :create, {actividad: FactoryGirl.attributes_for(:actividad, plantilla_id: plantilla.id, modoejecucion: actividad.modoejecucion), :nodo_padre => myjstree1.id, :nodo_titulo => actividad.nombre, :nodo_tipo => "tarea_multi_para", :posicion => "0"}
        actividadBD = Actividad.last
        myjstreeBD = MyJsTree.last()
        post :updateName, {:nombre => actividadUpdate.nombre, :nodo_id => myjstreeBD.id, :id => actividadBD.id}
        actividadBDUpd = Actividad.find_by_id(actividadBD.id)
        myjstreeBDUpd = MyJsTree.find_by_id(myjstreeBD.id)
        actividadBDUpd.nombre.should eq(actividadUpdate.nombre)
        myjstreeBDUpd.title.should eq(actividadUpdate.nombre)
      end

      it "redirects to the rename actividad tarea_multi_para" do
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.build(:actividad, plantilla_id: plantilla.id, modoejecucion: "3")
        actividadUpdate = FactoryGirl.build(:actividad, plantilla_id: plantilla.id)
        post :create, {actividad: FactoryGirl.attributes_for(:actividad, plantilla_id: plantilla.id, modoejecucion: actividad.modoejecucion), :nodo_padre => myjstree1.id, :nodo_titulo => actividad.nombre, :nodo_tipo => "tarea_multi_para", :posicion => "0"}
        actividadBD = Actividad.last
        myjstreeBD = MyJsTree.last()
        post :updateName, {:nombre => actividadUpdate.nombre, :nodo_id => myjstreeBD.id, :id => actividadBD.id}
        response.should render_template(:text => "true")
      end
    end

    context "with valid attributes" do
      it "destroy a actividad tarea_simple" do
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.build(:actividad, plantilla_id: plantilla.id)
        post :create, {actividad: FactoryGirl.attributes_for(:actividad, plantilla_id: plantilla.id), :nodo_padre => myjstree1.id, :nodo_titulo => actividad.nombre, :nodo_tipo => "tarea_simple", :posicion => "0"}
        actividadBD = Actividad.last
        myjstreeBD = MyJsTree.last()
        post :destroy, {:id => actividadBD.id}
        actividadBDUpd = Actividad.find_by_id(actividadBD.id)
        myjstreeBDUpd = MyJsTree.find_by_id(myjstreeBD.id)
        actividadBDUpd.should be_nil
        myjstreeBDUpd.should be_nil
      end

      it "redirects to the destroy actividad tarea_simple" do
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.build(:actividad, plantilla_id: plantilla.id)
        post :create, {actividad: FactoryGirl.attributes_for(:actividad, plantilla_id: plantilla.id), :nodo_padre => myjstree1.id, :nodo_titulo => actividad.nombre, :nodo_tipo => "tarea_simple", :posicion => "0"}
        actividadBD = Actividad.last
        myjstreeBD = MyJsTree.last()
        post :destroy, {:id => actividadBD.id}
        response.should render_template(:text => "true")
      end
    end

    context "with valid attributes" do
      it "destroy a actividad tarea_multi_seq" do
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.build(:actividad, plantilla_id: plantilla.id, modoejecucion: "2")
        post :create, {actividad: FactoryGirl.attributes_for(:actividad, plantilla_id: plantilla.id, modoejecucion: actividad.modoejecucion), :nodo_padre => myjstree1.id, :nodo_titulo => actividad.nombre, :nodo_tipo => "tarea_multi_seq", :posicion => "0"}
        actividadBD = Actividad.last
        myjstreeBD = MyJsTree.last()
        post :destroy, {:id => actividadBD.id}
        actividadBDUpd = Actividad.find_by_id(actividadBD.id)
        myjstreeBDUpd = MyJsTree.find_by_id(myjstreeBD.id)
        actividadBDUpd.should be_nil
        myjstreeBDUpd.should be_nil
      end

      it "redirects to the destroy actividad tarea_multi_seq" do
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.build(:actividad, plantilla_id: plantilla.id, modoejecucion: "2")
        post :create, {actividad: FactoryGirl.attributes_for(:actividad, plantilla_id: plantilla.id, modoejecucion: actividad.modoejecucion), :nodo_padre => myjstree1.id, :nodo_titulo => actividad.nombre, :nodo_tipo => "tarea_multi_seq", :posicion => "0"}
        actividadBD = Actividad.last
        myjstreeBD = MyJsTree.last()
        post :destroy, {:id => actividadBD.id}
        response.should render_template(:text => "true")
      end
    end

    context "with valid attributes" do
      it "destroy a actividad tarea_multi_para" do
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.build(:actividad, plantilla_id: plantilla.id, modoejecucion: "3")
        post :create, {actividad: FactoryGirl.attributes_for(:actividad, plantilla_id: plantilla.id, modoejecucion: actividad.modoejecucion), :nodo_padre => myjstree1.id, :nodo_titulo => actividad.nombre, :nodo_tipo => "tarea_multi_para", :posicion => "0"}
        actividadBD = Actividad.last
        myjstreeBD = MyJsTree.last()
        post :destroy, {:id => actividadBD.id}
        actividadBDUpd = Actividad.find_by_id(actividadBD.id)
        myjstreeBDUpd = MyJsTree.find_by_id(myjstreeBD.id)
        actividadBDUpd.should be_nil
        myjstreeBDUpd.should be_nil
      end

      it "redirects to the destroy actividad tarea_multi_para" do
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.build(:actividad, plantilla_id: plantilla.id, modoejecucion: "3")
        post :create, {actividad: FactoryGirl.attributes_for(:actividad, plantilla_id: plantilla.id, modoejecucion: actividad.modoejecucion), :nodo_padre => myjstree1.id, :nodo_titulo => actividad.nombre, :nodo_tipo => "tarea_multi_para", :posicion => "0"}
        actividadBD = Actividad.last
        myjstreeBD = MyJsTree.last()
        post :destroy, {:id => actividadBD.id}
        response.should render_template(:text => "true")
      end
    end

    context "with valid attributes" do
      it "redifine turnos" do
        tipo_recurso = FactoryGirl.create(:tipo_recurso, unit: "1")
        tipo_recurso2 = FactoryGirl.create(:tipo_recurso, unit: "1")
        tipo_recurso3 = FactoryGirl.create(:tipo_recurso, unit: "1")
        actividad_revision = FactoryGirl.build(:actividad_revision)
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.create(:actividad, plantilla_id: plantilla.id)
        actividad_revision = FactoryGirl.create(:actividad_revision, actividad_id: actividad.id, tipo_recurso_id: tipo_recurso.id, turno: 1)
        actividad_revision2 = FactoryGirl.create(:actividad_revision, actividad_id: actividad.id, tipo_recurso_id: tipo_recurso2.id, turno: 2)
        actividad_revision3 = FactoryGirl.create(:actividad_revision, actividad_id: actividad.id, tipo_recurso_id: tipo_recurso3.id, turno: 3)
        actividad_revisionid = actividad_revision.id
        actividad_revisionid2 = actividad_revision2.id
        actividad_revisionid3 = actividad_revision3.id
        tipo_recursoid = tipo_recurso.id
        tipo_recursoid2 = tipo_recurso2.id
        tipo_recursoid3 = tipo_recurso3.id
        param = "id_#{actividad_revisionid}" + "_tr_#{tipo_recursoid}" + "_t_3"
        param2 = "id_#{actividad_revisionid2}" + "_tr_#{tipo_recursoid2}" + "_t_2"
        param3 = "id_#{actividad_revisionid3}" + "_tr_#{tipo_recursoid3}" + "_t_1"
        get :turnos, {:datos => [param,param2,param3]}
        actividad_revisionBD = ActividadRevision.find_by_id(actividad_revision.id)
        actividad_revisionBD2 = ActividadRevision.find_by_id(actividad_revision2.id)
        actividad_revisionBD3 = ActividadRevision.find_by_id(actividad_revision3.id)
        actividad_revisionBD.turno.should eql(3)
        actividad_revisionBD2.turno.should eql(2)
        actividad_revisionBD3.turno.should eql(1)
      end

      it "redirects to redifine turnos" do
        tipo_recurso = FactoryGirl.create(:tipo_recurso, unit: "1")
        tipo_recurso2 = FactoryGirl.create(:tipo_recurso, unit: "1")
        tipo_recurso3 = FactoryGirl.create(:tipo_recurso, unit: "1")
        actividad_revision = FactoryGirl.build(:actividad_revision)
        tipo_plantilla = FactoryGirl.create(:tipo_plantilla)
        plantilla = FactoryGirl.create(:plantilla, tipo_plantilla_id: tipo_plantilla.id)
        #crea arbol
        myjstree = MyJsTree.new(:parent_id => 0,:position => 0,:type => 'root',:title => plantilla.nombre,:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree.save
        myjstree1 = MyJsTree.new(:parent_id => MyJsTree.last().id,:position => 0,:type => 'evento_inicio',:title => 'Inicio',:plantilla_id => plantilla.id,:left => 0,:right => 0,:level => 0)
        myjstree1.save
        evento=Evento.new(:nombre=>'Inicio',:descripcion=> '',:tipo=> '1',:plantilla_id=> plantilla.id,:my_js_tree_id=> MyJsTree.last().id)
        evento.save
        actividad = FactoryGirl.create(:actividad, plantilla_id: plantilla.id)
        actividad_revision = FactoryGirl.create(:actividad_revision, actividad_id: actividad.id, tipo_recurso_id: tipo_recurso.id, turno: 1)
        actividad_revision2 = FactoryGirl.create(:actividad_revision, actividad_id: actividad.id, tipo_recurso_id: tipo_recurso2.id, turno: 2)
        actividad_revision3 = FactoryGirl.create(:actividad_revision, actividad_id: actividad.id, tipo_recurso_id: tipo_recurso3.id, turno: 3)
        actividad_revisionid = actividad_revision.id
        actividad_revisionid2 = actividad_revision2.id
        actividad_revisionid3 = actividad_revision3.id
        tipo_recursoid = tipo_recurso.id
        tipo_recursoid2 = tipo_recurso2.id
        tipo_recursoid3 = tipo_recurso3.id
        param = "id_#{actividad_revisionid}" + "_tr_#{tipo_recursoid}" + "_t_3"
        param2 = "id_#{actividad_revisionid2}" + "_tr_#{tipo_recursoid2}" + "_t_2"
        param3 = "id_#{actividad_revisionid3}" + "_tr_#{tipo_recursoid3}" + "_t_1"
        get :turnos, {:datos => [param,param2,param3]}
        response.should render_template(:text => "true")
      end
    end
  end
end
